# coding: utf-8
'''
驚くべきことに, 各桁を4乗した数の和が元の数と一致する数は3つしかない.
1634 = 1^4 + 6^4 + 3^4 + 4^4
8208 = 8^4 + 2^4 + 0^4 + 8^4
9474 = 9^4 + 4^4 + 7^4 + 4^4
ただし, 1=1^4は含まないものとする. この数たちの和は 1634 + 8208 + 9474 = 19316 である.
各桁を5乗した数の和が元の数と一致するような数の総和を求めよ.
'''


def digit_sum(n, p):
    s = 0
    while n > 0:
        r = n % 10
        n = n // 10
        s += r ** p
    return s


def main():
    # 調べるべき最大数は全桁9のときの和がその数を下回るとき
    p = 5  # 累乗の設定
    n = 1
    while (9**p)*n >= 10**n:
        n += 1
    s = 0
    for i in range(2, 10**n):
        if i == digit_sum(i, p):
            s += i
    print(s)


if __name__ == '__main__':
    main()
